import unittest
from LinkedList import *
class LinkedListTests(unittest.TestCase):
    #Test Cases for the Singly Linked List Data Structure.
    def test_is_empty_single(self):
        #Test Cases for the is_empty method.
        linked_list=SinglyLinkedList()
        self.assertTrue(linked_list.is_empty())
        linked_list.add(1)
        self.assertFalse(linked_list.is_empty())
        linked_list.add(2)
        self.assertFalse(linked_list.is_empty())
        linked_list.delete(1)
        self.assertFalse(linked_list.is_empty())
        linked_list.delete(2)
        self.assertTrue(linked_list.is_empty())
    def test_search_single(self):
        #Test Cases for the search method.
        linked_list=SinglyLinkedList()
        self.assertEqual(linked_list.search(3),False)
        self.assertEqual(linked_list.search(4),False)
        linked_list.add(3)
        self.assertEqual(linked_list.search(4),False)
        self.assertEqual(linked_list.search(3),True)
        linked_list.add(4)
        self.assertEqual(linked_list.search(3),True)
        self.assertEqual(linked_list.search(4),True)
        linked_list.delete(3)
        self.assertEqual(linked_list.search(3),False)
        self.assertEqual(linked_list.search(4),True)
        linked_list.delete(4)
        self.assertEqual(linked_list.search(3),False)
        self.assertEqual(linked_list.search(4),False)
        linked_list.add(3)
        self.assertEqual(linked_list.search(3),True)
        linked_list.delete(3)
        self.assertEqual(linked_list.search(3),False)
        self.assertEqual(linked_list.search(5),False)
        linked_list.add(5)
        self.assertEqual(linked_list.search(5),True)
        linked_list.delete(5)
        self.assertEqual(linked_list.search(5),False)
    def test_add_single(self):
        #Tests for the add method.
        linked_list=SinglyLinkedList()
        self.assertEqual(linked_list.is_empty(),True)
        self.assertEqual(linked_list.head,None)
        linked_list.add(6)
        self.assertEqual(linked_list.is_empty(),False)
        self.assertEqual(linked_list.search(6),True)
        self.assertEqual(linked_list.head.value,6)
        self.assertEqual(linked_list.head.next,None)
        linked_list.add(7)
        self.assertEqual(linked_list.is_empty(),False)
        self.assertEqual(linked_list.search(7),True)
        self.assertEqual(linked_list.head.value,6)
        self.assertEqual(linked_list.head.next.value,7)
        self.assertEqual(linked_list.head.next.next,None)
        linked_list.add(8)
        self.assertEqual(linked_list.is_empty(),False)
        self.assertEqual(linked_list.search(8),True)
        self.assertEqual(linked_list.head.value,6)
        self.assertEqual(linked_list.head.next.next.value,8)
        self.assertEqual(linked_list.head.next.next.next,None)
    def test_delete_single(self):
        #Test Cases for the delete method.
        linked_list=SinglyLinkedList()
        self.assertEqual(linked_list.is_empty(),True)
        self.assertEqual(linked_list.head,None)
        linked_list.add(9)
        self.assertEqual(linked_list.is_empty(),False)
        self.assertEqual(linked_list.head.value,9)
        boolean_1=linked_list.delete(9)
        self.assertEqual(boolean_1,True)
        self.assertEqual(linked_list.head,None)
        self.assertEqual(linked_list.is_empty(),True)
        boolean_2=linked_list.delete(10)
        self.assertEqual(boolean_2,False)
        linked_list.add(11)
        linked_list.add(12)
        linked_list.add(13)
        self.assertEqual(linked_list.head.value,11)
        self.assertEqual(linked_list.head.next.value,12)
        self.assertEqual(linked_list.head.next.next.value,13)
        boolean_3=linked_list.delete(14)
        boolean_4=linked_list.delete(12)
        self.assertEqual(boolean_3,False)
        self.assertEqual(boolean_4,True)
        self.assertEqual(linked_list.head.value,11)
        self.assertEqual(linked_list.head.next.value,13)
        self.assertEqual(linked_list.head.next.next,None)
        boolean_5=linked_list.delete(15)
        boolean_6=linked_list.delete(13)
        self.assertEqual(boolean_5,False)
        self.assertEqual(boolean_6,True)
        self.assertEqual(linked_list.head.value,11)
        self.assertEqual(linked_list.head.next,None)

    #Test Cases for the Doubly Linked List Data Structure
    def test_is_empty_double(self):
        #Test Cases for the is_empty method.
        linked_list=DoublyLinkedList()
        self.assertTrue(linked_list.is_empty())
        linked_list.add(1)
        linked_list.add(2)
        self.assertFalse(linked_list.is_empty())
        linked_list.delete(2)
        self.assertFalse(linked_list.is_empty())
        linked_list.delete(1)
        self.assertTrue(linked_list.is_empty())
    def test_search_double(self):
        #Test Cases for the search method.
        linked_list=DoublyLinkedList()
        boolean_1=linked_list.search(3)
        boolean_2=linked_list.search(4)
        boolean_3=linked_list.search(5)
        self.assertFalse(boolean_1)
        self.assertFalse(boolean_2)
        self.assertFalse(boolean_3)
        linked_list.add(3)
        linked_list.add(4)
        linked_list.add(5)
        boolean_4=linked_list.search(3)
        boolean_5=linked_list.search(4)
        boolean_6=linked_list.search(5)
        boolean_7=linked_list.search(6)
        boolean_8=linked_list.search(7)
        boolean_9=linked_list.search(8)
        self.assertTrue(boolean_4)
        self.assertTrue(boolean_5)
        self.assertTrue(boolean_6)
        self.assertFalse(boolean_7)
        self.assertFalse(boolean_8)
        self.assertFalse(boolean_9)
    def test_add_double(self):
        #Test Cases for the add method.
        linked_list=DoublyLinkedList()
        self.assertTrue(linked_list.is_empty())
        self.assertEqual(linked_list.head,None)
        linked_list.add(9)
        self.assertFalse(linked_list.is_empty())
        self.assertEqual(linked_list.head.value,9)
        self.assertEqual(linked_list.head.next,None)
        linked_list.add(10)
        self.assertFalse(linked_list.is_empty())
        self.assertEqual(linked_list.head.value,9)
        self.assertEqual(linked_list.head.next.value,10)
        self.assertEqual(linked_list.head.next.prev.value,9)
        linked_list.add(11)
        self.assertFalse(linked_list.is_empty())
        self.assertEqual(linked_list.head.value,9)
        self.assertEqual(linked_list.head.next.value,10)
        self.assertEqual(linked_list.head.next.next.value,11)
        self.assertEqual(linked_list.head.next.next.prev.value,10)
    def test_delete_double(self):
        #Test Cases for the delete method.
        linked_list=DoublyLinkedList()
        boolean_1=linked_list.delete(12)
        self.assertTrue(linked_list.is_empty())
        self.assertEqual(linked_list.head,None)
        self.assertEqual(boolean_1,False)
        linked_list.add(12)
        self.assertEqual(linked_list.head.value,12)
        boolean_2=linked_list.delete(12)
        self.assertEqual(linked_list.head,None)
        self.assertTrue(linked_list.is_empty())
        self.assertEqual(boolean_2,True)
        linked_list.add(13)
        linked_list.add(14)
        linked_list.add(15)
        self.assertEqual(linked_list.head.value,13)
        self.assertFalse(linked_list.is_empty())
        boolean_3=linked_list.delete(13)
        boolean_4=linked_list.delete(99)
        self.assertEqual(boolean_3,True)
        self.assertEqual(boolean_4,False)
        self.assertEqual(linked_list.head.value,14)
        self.assertEqual(linked_list.head.prev,None)
        self.assertEqual(linked_list.head.next.value,15)
        linked_list_2=DoublyLinkedList()
        linked_list_2.add(16)
        linked_list_2.add(17)
        linked_list_2.add(18)
        boolean_5=linked_list_2.delete(17)
        boolean_6=linked_list_2.delete(98)
        self.assertEqual(boolean_5,True)
        self.assertEqual(boolean_6,False)
        self.assertEqual(linked_list_2.head.value,16)
        self.assertEqual(linked_list_2.head.next.value,18)
        self.assertEqual(linked_list_2.head.next.prev.value,16)
        linked_list_3=DoublyLinkedList()
        linked_list_3.add(19)
        linked_list_3.add(20)
        linked_list_3.add(21)
        boolean_7=linked_list_3.delete(21)
        boolean_8=linked_list_3.delete(97)
        self.assertEqual(boolean_7,True)
        self.assertEqual(boolean_8,False)
        self.assertEqual(linked_list_3.head.value,19)
        self.assertEqual(linked_list_3.head.next.value,20)
        self.assertEqual(linked_list_3.head.next.next,None)
        linked_list_4=DoublyLinkedList()
        linked_list_4.add(22)
        linked_list_4.add(23)
        linked_list_4.add(24)
        self.assertEqual(linked_list_4.head.value,22)
        boolean_9=linked_list_4.delete(22)
        boolean_10=linked_list_4.delete(96)
        self.assertEqual(boolean_9,True)
        self.assertEqual(boolean_10,False)
        self.assertEqual(linked_list_4.head.value,23)
        self.assertEqual(linked_list_4.head.next.value,24)
        self.assertEqual(linked_list_4.head.next.prev.value,23)
        self.assertEqual(linked_list_4.head.prev,None)




if __name__ == '__main__':
    unittest.main()
